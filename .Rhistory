library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(swirl)
install_course("Exploratory Data Analysis")
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col= "blue")
abline(h=.4, col= "red")
5
12
abline(h=.05, col= "green")
dist(dFsm)
hc
heatmap(dataMatrix, Colv = cm.colors(25))
heatmap(dataMatrix, Col = cm.colors(25))
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmt
cmat
points(cx,cy,col("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
points(cx,cy,col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points(x,y,pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd =2)
mdist(x,y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x,y,pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, 3)
kmObj$iter
plot(x, y, col = kmObj$cluster,pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit(addPatt.R)
myedit("addPatt.R")
myedit(name = "addPatt.R")
myedit("addPatt.R")
setwd("~/")
myedit("addPatt.R")
myedit("addPatt.R")
myedit("addPart.R")
q()
setwd("~/Data Science Specialization/Data Science repo/Developing-data-products")
setwd("~/Data Science Specialization/Data Science repo/Developing-data-products-week-3")
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, echo = FALSE,
message = FALSE, warning = FALSE)
rm(list=ls())
library(plotly)
install.packages("plotly")
rm(list=ls())
library(plotly)
library(data.table)
library(tidyr)
library(lubridate)
library(zoo)
install.packages("zoo")
rm(list=ls())
library(plotly)
library(data.table)
library(tidyr)
library(lubridate)
library(zoo)
accidents_2017 <- fread("./data/Acc.csv", header = TRUE,
sep = ",")
accidents_2017 <- fread("/data/Acc.csv", header = TRUE,
sep = ",")
accidents_2017 <- fread(".data/Acc.csv", header = TRUE,
sep = ",")
accidents_2017 <- fread("data/Acc.csv", header = TRUE,
sep = ",")
accidents_2017 <- fread("../data/Acc.csv", header = TRUE,
sep = ",")
# The source data sets are not included in this repository.
# To reproduce this presentation, you will first need to download the two
# following zipped data sets:
# - All STATS19 data (accident, casualties and vehicle tables) for 2005 to
#   2014", from
#   https://data.gov.uk/dataset/road-accidents-safety-data/resource/8ecee6ac-33fd-4f5b-8973-e900cc65d24a)
# - Road Safety - Accidents 2015, from
#   https://data.gov.uk/dataset/road-accidents-safety-data/resource/ceb00cff-443d-4d43-b17a-ee13437e9564)
# Then extract the `Accidents0514.csv` and `Accidents_2015.csv` files from
# the zip files in a subdirectory named `data`.
# read data for 2005-2014 and 2015 as data tables and keep only severity and
# date columns
accidents_2017 <- fread("../data/Acc.csv", header = TRUE,
sep = ",")
accidents_2017 <- accidents_2017 %>%
select(Accident_Severity, Date)
# The source data sets are not included in this repository.
# To reproduce this presentation, you will first need to download the two
# following zipped data sets:
# - All STATS19 data (accident, casualties and vehicle tables) for 2005 to
#   2014", from
#   https://data.gov.uk/dataset/road-accidents-safety-data/resource/8ecee6ac-33fd-4f5b-8973-e900cc65d24a)
# - Road Safety - Accidents 2015, from
#   https://data.gov.uk/dataset/road-accidents-safety-data/resource/ceb00cff-443d-4d43-b17a-ee13437e9564)
# Then extract the `Accidents0514.csv` and `Accidents_2015.csv` files from
# the zip files in a subdirectory named `data`.
# read data for 2005-2014 and 2015 as data tables and keep only severity and
# date columns
accidents_2017 <- fread("../data/Acc.csv", header = TRUE,
sep = ",")
accidents_2017 <- accidents_2017 %>%  select(Accident_Severity, Date)
rm(list=ls())
library(plotly)
library(data.table)
library(dplyr)
library(tidyr)
library(lubridate)
library(zoo)
# The source data sets are not included in this repository.
# To reproduce this presentation, you will first need to download the two
# following zipped data sets:
# - All STATS19 data (accident, casualties and vehicle tables) for 2005 to
#   2014", from
#   https://data.gov.uk/dataset/road-accidents-safety-data/resource/8ecee6ac-33fd-4f5b-8973-e900cc65d24a)
# - Road Safety - Accidents 2015, from
#   https://data.gov.uk/dataset/road-accidents-safety-data/resource/ceb00cff-443d-4d43-b17a-ee13437e9564)
# Then extract the `Accidents0514.csv` and `Accidents_2015.csv` files from
# the zip files in a subdirectory named `data`.
# read data for 2005-2014 and 2015 as data tables and keep only severity and
# date columns
accidents_2017 <- fread("../data/Acc.csv", header = TRUE,
sep = ",")
accidents_2017 <- accidents_2017 %>%  select(Accident_Severity, Date)
accidents_2016 <- fread("../data/dftRoadSafety_Accidents_2016.csv", header = TRUE,
sep = ",")
accidents_2016 <- accidents_2016 %>%
select(Accident_Severity, Date)
# concatenate data tables and free up environment
accidents <- rbind(accidents_2017, accidents_2016)
rm(list = c("accidents_2017", "accidents_2016"))
View(accidents)
View(accidents)
# convert severity to factor and add labels
accidents$Accident_Severity <-
factor(accidents$Accident_Severity,
levels = 1:3, labels = c("Fatal", "Serious", "Slight"))
# convert date strings to Date objects
accidents$Date <- dmy(accidents$Date)
# group data by date and severity, get count, one row per date
accident_count <- accidents %>%
group_by(Date, Accident_Severity) %>%
summarise(count = n()) %>%
spread(key = Accident_Severity, value = count) %>%
as.data.frame()
# create a smoother for each severity to visualise general trends
loess_slight <- loess(Slight ~ as.numeric(Date),
data = accident_count)
loess_serious <- loess(Serious ~ as.numeric(Date),
data = accident_count)
loess_fatal <- loess(Fatal ~ as.numeric(Date),
data = accident_count)
# plot data
plot_ly(accident_count) %>%
add_trace(x = ~Date, y = ~Slight, type="scatter", mode = "markers",
name = "slight", legendgroup = "slight",
marker = list(color = "#52A9BD")) %>%
add_trace(x = ~Date, y = ~Serious, type="scatter", mode = "markers",
name = "serious", legendgroup = "serious",
marker = list(color = "#FFF16B")) %>%
add_trace(x = ~Date, y = ~Fatal, type="scatter", mode = "markers",
name = "fatal", legendgroup = "fatal",
marker = list(color = "#F5677D")) %>%
add_trace(x = as.Date(loess_slight$x), y = fitted(loess_slight),
type="scatter", mode = "lines",
line = list(color = '#1A7A90'),
name = "slight Loess smoother", legendgroup = "slight",
hoverinfo = 'none', showlegend = FALSE) %>%
add_trace(x = as.Date(loess_serious$x), y = fitted(loess_serious),
type="scatter", mode = "lines",
line = list(color = '#E9D625'),
name = "serious Loess smoother", legendgroup = "serious",
hoverinfo = 'none', showlegend = FALSE) %>%
add_lines(x = as.Date(loess_fatal$x), y = fitted(loess_fatal),
type="scatter", mode = "lines",
line = list(color = '#DC2340'),
name = "fatal Loess smoother", legendgroup = "fatal",
hoverinfo = 'none', showlegend = FALSE) %>%
layout(
xaxis = list(title = "date"),
yaxis = list(title = "number of accidents")
)
# plot data
plot_ly(accident_count) %>%
add_trace(x = ~Date, y = ~Slight, type="scatter", mode = "markers",
name = "slight", legendgroup = "slight",
marker = list(color = "#52A9BD")) %>%
add_trace(x = ~Date, y = ~Serious, type="scatter", mode = "markers",
name = "serious", legendgroup = "serious",
marker = list(color = "#FFF16B")) %>%
add_trace(x = ~Date, y = ~Fatal, type="scatter", mode = "markers",
name = "fatal", legendgroup = "fatal",
marker = list(color = "#F5677D")) %>%
add_trace(x = as.Date(loess_slight$x), y = fitted(loess_slight),
type="scatter", mode = "lines",
line = list(color = '#1A7A90'),
name = "slight Loess smoother", legendgroup = "slight",
hoverinfo = 'none', showlegend = FALSE) %>%
add_trace(x = as.Date(loess_serious$x), y = fitted(loess_serious),
type="scatter", mode = "lines",
line = list(color = '#E9D625'),
name = "serious Loess smoother", legendgroup = "serious",
hoverinfo = 'none', showlegend = FALSE) %>%
add_lines(x = as.Date(loess_fatal$x), y = fitted(loess_fatal),
type="scatter", mode = "lines",
line = list(color = '#DC2340'),
name = "fatal Loess smoother", legendgroup = "fatal",
hoverinfo = 'none', showlegend = FALSE) %>%
layout(
xaxis = list(title = "date"),
yaxis = list(title = "number of accidents")
)
# plot data
plot_ly(accident_count) %>%
add_trace(x = ~Date, y = ~Slight, type="scatter", mode = "markers",
name = "slight", legendgroup = "slight",
marker = list(color = "#52A9BD")) %>%
add_trace(x = ~Date, y = ~Serious, type="scatter", mode = "markers",
name = "serious", legendgroup = "serious",
marker = list(color = "#FFF16B")) %>%
add_trace(x = ~Date, y = ~Fatal, type="scatter", mode = "markers",
name = "fatal", legendgroup = "fatal",
marker = list(color = "#F5677D")) %>%
add_trace(x = as.Date(loess_slight$x), y = fitted(loess_slight),
type="scatter", mode = "lines",
line = list(color = '#1A7A90'),
name = "slight Loess smoother", legendgroup = "slight",
hoverinfo = 'none', showlegend = FALSE) %>%
add_trace(x = as.Date(loess_serious$x), y = fitted(loess_serious),
type="scatter", mode = "lines",
line = list(color = '#E9D625'),
name = "serious Loess smoother", legendgroup = "serious",
hoverinfo = 'none', showlegend = FALSE) %>%
layout(
xaxis = list(title = "date"),
yaxis = list(title = "number of accidents")
)
# plot data
plot_ly(accident_count) %>%
add_trace(x = ~Date, y = ~Slight, type="scatter", mode = "markers",
name = "slight", legendgroup = "slight",
marker = list(color = "#52A9BD")) %>%
add_trace(x = ~Date, y = ~Serious, type="scatter", mode = "markers",
name = "serious", legendgroup = "serious",
marker = list(color = "#FFF16B")) %>%
add_trace(x = ~Date, y = ~Fatal, type="scatter", mode = "markers",
name = "fatal", legendgroup = "fatal",
marker = list(color = "#F5677D")) %>%
add_trace(x = as.Date(loess_slight$x), y = fitted(loess_slight),
type="scatter", mode = "lines",
line = list(color = '#1A7A90'),
name = "slight Loess smoother", legendgroup = "slight",
hoverinfo = 'none', showlegend = FALSE) %>%
add_trace(x = as.Date(loess_serious$x), y = fitted(loess_serious),
type="scatter", mode = "lines",
line = list(color = '#E9D625'),
name = "serious Loess smoother", legendgroup = "serious",
hoverinfo = 'none', showlegend = FALSE) %>%
add_lines(x = as.Date(loess_fatal$x), y = fitted(loess_fatal),
type="scatter", mode = "lines",
line = list(color = '#DC2340'),
name = "fatal Loess smoother", legendgroup = "fatal",
hoverinfo = 'none', showlegend = FALSE) %>%
layout(
xaxis = list(title = "date"),
yaxis = list(title = "number of accidents")
)
install.packages("plotly")
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, echo = FALSE,
message = FALSE, warning = FALSE)
rm(list=ls())
library(plotly)
library(data.table)
library(dplyr)
library(tidyr)
library(lubridate)
library(zoo)
# The source data sets are not included in this repository.
# To reproduce this presentation, you will first need to download the two
# following zipped data sets:
# - All STATS19 data (accident, casualties and vehicle tables) for 2005 to
#   2014", from
#   https://data.gov.uk/dataset/road-accidents-safety-data/resource/8ecee6ac-33fd-4f5b-8973-e900cc65d24a)
# - Road Safety - Accidents 2015, from
#   https://data.gov.uk/dataset/road-accidents-safety-data/resource/ceb00cff-443d-4d43-b17a-ee13437e9564)
# Then extract the `Accidents0514.csv` and `Accidents_2015.csv` files from
# the zip files in a subdirectory named `data`.
# read data for 2005-2014 and 2015 as data tables and keep only severity and
# date columns
accidents_2017 <- fread("../data/Acc.csv", header = TRUE,
sep = ",")
accidents_2017 <- accidents_2017 %>%  select(Accident_Severity, Date)
accidents_2016 <- fread("../data/dftRoadSafety_Accidents_2016.csv", header = TRUE,
sep = ",")
accidents_2016 <- accidents_2016 %>%
select(Accident_Severity, Date)
# concatenate data tables and free up environment
accidents <- rbind(accidents_2017, accidents_2016)
rm(list = c("accidents_2017", "accidents_2016"))
# convert severity to factor and add labels
accidents$Accident_Severity <-
factor(accidents$Accident_Severity,
levels = 1:3, labels = c("Fatal", "Serious", "Slight"))
# convert date strings to Date objects
accidents$Date <- dmy(accidents$Date)
# group data by date and severity, get count, one row per date
accident_count <- accidents %>%
group_by(Date, Accident_Severity) %>%
summarise(count = n()) %>%
spread(key = Accident_Severity, value = count) %>%
as.data.frame()
# create a smoother for each severity to visualise general trends
loess_slight <- loess(Slight ~ as.numeric(Date),
data = accident_count)
loess_serious <- loess(Serious ~ as.numeric(Date),
data = accident_count)
loess_fatal <- loess(Fatal ~ as.numeric(Date),
data = accident_count)
# plot data
plot_ly(accident_count) %>%
add_trace(x = ~Date, y = ~Slight, type="scatter", mode = "markers",
name = "slight", legendgroup = "slight",
marker = list(color = "#52A9BD")) %>%
add_trace(x = ~Date, y = ~Serious, type="scatter", mode = "markers",
name = "serious", legendgroup = "serious",
marker = list(color = "#FFF16B")) %>%
add_trace(x = ~Date, y = ~Fatal, type="scatter", mode = "markers",
name = "fatal", legendgroup = "fatal",
marker = list(color = "#F5677D")) %>%
add_trace(x = as.Date(loess_slight$x), y = fitted(loess_slight),
type="scatter", mode = "lines",
line = list(color = '#1A7A90'),
name = "slight Loess smoother", legendgroup = "slight",
hoverinfo = 'none', showlegend = FALSE) %>%
add_trace(x = as.Date(loess_serious$x), y = fitted(loess_serious),
type="scatter", mode = "lines",
line = list(color = '#E9D625'),
name = "serious Loess smoother", legendgroup = "serious",
hoverinfo = 'none', showlegend = FALSE) %>%
add_(x = as.Date(loess_fatal$x), y = fitted(loess_fatal),
type="scatter", mode = "lines",
line = list(color = '#DC2340'),
name = "fatal Loess smoother", legendgroup = "fatal",
hoverinfo = 'none', showlegend = FALSE) %>%
layout(
xaxis = list(title = "date"),
yaxis = list(title = "number of accidents")
)
# plot data
plot_ly(accident_count) %>%
add_trace(x = ~Date, y = ~Slight, type="scatter", mode = "markers",
name = "slight", legendgroup = "slight",
marker = list(color = "#52A9BD")) %>%
add_trace(x = ~Date, y = ~Serious, type="scatter", mode = "markers",
name = "serious", legendgroup = "serious",
marker = list(color = "#FFF16B")) %>%
add_trace(x = ~Date, y = ~Fatal, type="scatter", mode = "markers",
name = "fatal", legendgroup = "fatal",
marker = list(color = "#F5677D")) %>%
add_trace(x = as.Date(loess_slight$x), y = fitted(loess_slight),
type="scatter", mode = "lines",
line = list(color = '#1A7A90'),
name = "slight Loess smoother", legendgroup = "slight",
hoverinfo = 'none', showlegend = FALSE) %>%
add_trace(x = as.Date(loess_serious$x), y = fitted(loess_serious),
type="scatter", mode = "lines",
line = list(color = '#E9D625'),
name = "serious Loess smoother", legendgroup = "serious",
hoverinfo = 'none', showlegend = FALSE) %>%
add_lines(x = as.Date(loess_fatal$x), y = fitted(loess_fatal),
type="scatter", mode = "lines",
line = list(color = '#DC2340'),
name = "fatal Loess smoother", legendgroup = "fatal",
hoverinfo = 'none', showlegend = FALSE) %>%
layout(
xaxis = list(title = "date"),
yaxis = list(title = "number of accidents")
)
remove.packages("plotly")
install.packages("D:/Users/703196767/Downloads/plotly_4.8.0.tar.gz", repos = NULL, type = "source")
install.packages("D:/Users/703196767/Downloads/plotly_4.5.2.tar.gz", repos = NULL, type = "source")
install.packages("installr")
library(installr)
updateR()
